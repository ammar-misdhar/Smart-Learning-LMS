/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ICT;

import Main.Deshbord;
import Science.ElectronicConfiguration;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author SHAHMY MHD
 */
public class FillTheBlank extends javax.swing.JFrame {

    /**
     * Creates new form MCQ1
     */
    public FillTheBlank() {
        initComponents();
    }

    int qustion = 1;
    String answer = "";
    int Score = 0;
    int health = 4;
    int complete = 0;

    String idPas = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public void setId(String id) {
        idPas = id;
        try {
            Connection con = database.db.getConnection();
            String sql = "SELECT userName FROM smart_learning.register WHERE id=?;";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, id);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                String uName = rs.getString("userName");
                lblUname.setText("welcome " + uName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Deshbord.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void insertToSql() {

        try {
            // create connection to database
            Connection con = database.db.getConnection();
            // Create prepared statement with the sql query
            PreparedStatement st1 = con.prepareStatement("UPDATE `smart_learning`.`ict` SET `fillTheBlankComplete` = ?, `fillTheBlankScore` = ? WHERE (`stRegId` = '" + idPas + "');");
            // execute query
            st1.setString(1, complete + "");
            st1.setString(2, Score + "");

            st1.executeUpdate();

            // show success message
        } catch (SQLException ex) {
            Logger.getLogger(ElectronicConfiguration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Reeatemt() {
        
        complete = 0;
        lblComplete2.setText("Completed - " + complete + "%");
        
        lbltrue_false.setText("");
        Score = 0;
        lblScore.setText(Score + "");
        lblScoreSide2.setText(Score + "");
        health = 4;
        health1.setVisible(true);
        health2.setVisible(true);
        health3.setVisible(true);
        health4.setVisible(true);

        qustion = 0;
        qustion();

    }

    public void correct() {
        //correct Answer

        complete = complete + 10;
        lblComplete2.setText("Completed - " + complete + "%");

        lbltrue_false.setText("");
        btn_Next.setEnabled(true);

        if (qustion == 1) {
            if (answer.equals("None of the above")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {
                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 2) {
            if (answer.equals("Input")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 3) {
            if (answer.equals("Electronic")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 4) {
            if (answer.equals("Hardware")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 5) {
            if (answer.equals("Function")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 6) {
            if (answer.equals("Windows")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 7) {
            if (answer.equals("open")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }

            }
        }
        if (qustion == 8) {
            if (answer.equals("All of the above")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }

        if (qustion == 9) {
            if (answer.equals(".Jpgt")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);
                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }
            }
        }
        if (qustion == 10) {
            if (answer.equals("Folder")) {
                Score = Score + 10;
                lblScore.setText("" + Score);
                lblScoreSide2.setText("Score - " + Score);

                lbltrue_false.setText("Correct");
                lbltrue_false.setForeground(Color.BLACK);

            } else {

                lbltrue_false.setText("Wrong");
                lbltrue_false.setForeground(Color.RED);

                health--;
                if (health == 3) {
                    health4.setVisible(false);
                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);

                    btn_Next.setEnabled(false);
                    btn_Reattempt.setEnabled(true);
                }

            }
        }

        if (Score == 100) {
            btn_finish.setEnabled(true);
            btn_Next.setEnabled(false);

        }

        insertToSql();
    }

    public void qustion() {

        lblAns1.setEnabled(true);
        lblAns2.setEnabled(true);
        lblAns3.setEnabled(true);
        lblAns4.setEnabled(true);

        lbltrue_false.setText("");
        btn_Next.setEnabled(false);

        qustion++;
        if (qustion == 1) {
            //Qustion

            lblQuestion1.setText("Hardware would not be able to function without ___________");
            //Answer
            lblAns1.setText(" Shareware");
            lblAns2.setText("Freeware");
            lblAns3.setText("Software");
            lblAns4.setText("None of the above");
        } else if (qustion == 2) {
            //Qustion
            lblQuestion1.setText("Is a Keyboard an_________ device?");
            //Answer
            lblAns1.setText("Input");
            lblAns2.setText("Output");
            lblAns3.setText("Both");
            lblAns4.setText("None of the above");
        } else if (qustion == 3) {
            //Qustion
            lblQuestion1.setText("A computer is an _________machine");
            //Answer
            lblAns1.setText("Machanacial");
            lblAns2.setText("Electrical");
            lblAns3.setText("Electronic");
            lblAns4.setText("All of the above");

        } else if (qustion == 4) {
            //Qustion
            lblQuestion1.setText("Physical part of computer is caled_________");
            //Answer
            lblAns1.setText("Hardware");
            lblAns2.setText(" Software");
            lblAns3.setText("Shareware");
            lblAns4.setText("None of the above");
        } else if (qustion == 5) {

            //Qustion
            lblQuestion1.setText("Keys labled from F12 are _________keys");
            //Answer
            lblAns1.setText("Input");
            lblAns2.setText("System");
            lblAns3.setText("Function");
            lblAns4.setText("Help");
        } else if (qustion == 6) {
            //Qustion
            lblQuestion1.setText("_________Key opens the start menu");
            //Answer
            lblAns1.setText("Arrow");
            lblAns2.setText("Ctrl");
            lblAns3.setText("Windows");
            lblAns4.setText("None of the above");
        } else if (qustion == 7) {
            //Qustion
            lblQuestion1.setText("We can_______a file by mouse by double click on file  ");
            //Answer
            lblAns1.setText("Close");
            lblAns2.setText("Save");
            lblAns3.setText("open");
            lblAns4.setText("Delete");
        } else if (qustion == 8) {
            //Qustion
            lblQuestion1.setText("_________function is performed by mouse?");
            //Answer
            lblAns1.setText("Click");
            lblAns2.setText("Double click");
            lblAns3.setText("Drag an Drop ");
            lblAns4.setText("All of the above");
        } else if (qustion == 9) {
            //Qustion
            lblQuestion1.setText("The extension of image file__________");
            //Answer
            lblAns1.setText(".Xls");
            lblAns2.setText(".Jpg");
            lblAns3.setText(".Doc");
            lblAns4.setText(".Docx");
        } else if (qustion == 10) {
            //Qustion
            lblQuestion1.setText("A__________is a location where a group of files can be stored.");
            //Answer
            lblAns1.setText("Folder");
            lblAns2.setText("Main file");
            lblAns3.setText("Super file");
            lblAns4.setText("None of the above");
        }
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_finish = new javax.swing.JButton();
        btn_Next = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        lblQuestion1 = new javax.swing.JLabel();
        lblAns3 = new javax.swing.JButton();
        lblAns4 = new javax.swing.JButton();
        lblAns1 = new javax.swing.JButton();
        lblAns2 = new javax.swing.JButton();
        btn_Reattempt = new javax.swing.JButton();
        lblIndicator = new javax.swing.JLabel();
        lbltrue_false = new javax.swing.JLabel();
        pnl_Header = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        health1 = new javax.swing.JButton();
        health2 = new javax.swing.JButton();
        health3 = new javax.swing.JButton();
        health4 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblMainObject = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblScore = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        lblUname = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        lblUserName11 = new javax.swing.JLabel();
        jSeparator16 = new javax.swing.JSeparator();
        lblComplete2 = new javax.swing.JLabel();
        lblScoreSide2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(822, 538));

        btn_finish.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btn_finish.setText("Finish");
        btn_finish.setEnabled(false);

        btn_Next.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btn_Next.setText("Next");
        btn_Next.setEnabled(false);
        btn_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NextActionPerformed(evt);
            }
        });

        btn_back.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        lblQuestion1.setFont(new java.awt.Font("Poppins Medium", 0, 20)); // NOI18N
        lblQuestion1.setForeground(new java.awt.Color(102, 102, 102));
        lblQuestion1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQuestion1.setText("Hardware would not be able to function without ___________");

        lblAns3.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns3.setText("Software");
        lblAns3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns3ActionPerformed(evt);
            }
        });

        lblAns4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns4.setText("None of the above");
        lblAns4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns4ActionPerformed(evt);
            }
        });

        lblAns1.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns1.setText(" Shareware");
        lblAns1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns1ActionPerformed(evt);
            }
        });

        lblAns2.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns2.setText("Freeware");
        lblAns2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns2ActionPerformed(evt);
            }
        });

        btn_Reattempt.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btn_Reattempt.setText("Reattempt");
        btn_Reattempt.setEnabled(false);
        btn_Reattempt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ReattemptActionPerformed(evt);
            }
        });

        lblIndicator.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N

        lbltrue_false.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        lbltrue_false.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_Reattempt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_Next, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_finish, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAns4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblAns1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAns2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblAns3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblQuestion1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                            .addComponent(lbltrue_false, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(378, Short.MAX_VALUE)
                    .addComponent(lblIndicator)
                    .addContainerGap(377, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lbltrue_false, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblQuestion1)
                .addGap(56, 56, 56)
                .addComponent(lblAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_finish)
                    .addComponent(btn_Next)
                    .addComponent(btn_Reattempt)
                    .addComponent(btn_back))
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(258, Short.MAX_VALUE)
                    .addComponent(lblIndicator)
                    .addContainerGap(257, Short.MAX_VALUE)))
        );

        pnl_Header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Health");
        pnl_Header.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 194, 20));

        health1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health1.setBorder(null);
        health1.setContentAreaFilled(false);
        pnl_Header.add(health1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        health2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health2.setBorder(null);
        health2.setContentAreaFilled(false);
        pnl_Header.add(health2, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 40, 50, -1));

        health3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health3.setBorder(null);
        health3.setContentAreaFilled(false);
        pnl_Header.add(health3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        health4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health4.setBorder(null);
        health4.setContentAreaFilled(false);
        pnl_Header.add(health4, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 40, 50, -1));

        jLabel11.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Set the answer to given text box");
        pnl_Header.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 341, -1));

        lblMainObject.setFont(new java.awt.Font("Segoe UI", 2, 28)); // NOI18N
        lblMainObject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMainObject.setText("Fill in the Blank");
        pnl_Header.add(lblMainObject, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 341, -1));

        jLabel13.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Score");
        pnl_Header.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, -1, -1));

        lblScore.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblScore.setForeground(new java.awt.Color(102, 102, 102));
        lblScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore.setText("000");
        pnl_Header.add(lblScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 40, 39, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ICT title.png"))); // NOI18N
        pnl_Header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1283, 94));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jButton6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(102, 102, 102));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profile.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        lblUname.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        lblUname.setForeground(new java.awt.Color(102, 102, 102));
        lblUname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUname.setText("Wlcome Admin");

        jPanel16.setBackground(new java.awt.Color(247, 247, 247));
        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));
        jPanel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel16.setEnabled(false);

        lblUserName11.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        lblUserName11.setForeground(new java.awt.Color(51, 51, 51));
        lblUserName11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName11.setText("Fill in the blank");

        lblComplete2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        lblComplete2.setForeground(new java.awt.Color(51, 51, 51));
        lblComplete2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblComplete2.setText("Completed - 0%");

        lblScoreSide2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        lblScoreSide2.setForeground(new java.awt.Color(51, 51, 51));
        lblScoreSide2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScoreSide2.setText("Score - 000");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblScoreSide2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblComplete2, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(jSeparator16))
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblUserName11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblComplete2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblScoreSide2)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jButton2.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        jButton2.setText("Fill in the blank");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUname)
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_Header, javax.swing.GroupLayout.PREFERRED_SIZE, 755, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnl_Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NextActionPerformed
        qustion();

    }//GEN-LAST:event_btn_NextActionPerformed

    private void lblAns3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns3ActionPerformed

        String ans3 = lblAns3.getText();
        answer = ans3;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns3ActionPerformed

    private void lblAns4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns4ActionPerformed
        // TODO add your handling code here:
        String ans4 = lblAns4.getText();
        answer = ans4;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns4ActionPerformed

    private void lblAns1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns1ActionPerformed

        String ans1 = lblAns1.getText();
        answer = ans1;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns1ActionPerformed

    private void lblAns2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns2ActionPerformed
        // TODO add your handling code here:
        String ans2 = lblAns2.getText();
        answer = ans2;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns2ActionPerformed

    private void btn_ReattemptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ReattemptActionPerformed
        btn_Reattempt.setEnabled(false);
        btn_Next.setEnabled(true);
        Reeatemt();
    }//GEN-LAST:event_btn_ReattemptActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        Main.ictHub ih = new Main.ictHub();
        ih.setId(idPas);
        ih.show();
        this.dispose();

    }//GEN-LAST:event_btn_backActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FillTheBlank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FillTheBlank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FillTheBlank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FillTheBlank.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FillTheBlank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Next;
    private javax.swing.JButton btn_Reattempt;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_finish;
    private javax.swing.JButton health1;
    private javax.swing.JButton health2;
    private javax.swing.JButton health3;
    private javax.swing.JButton health4;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator16;
    private javax.swing.JButton lblAns1;
    private javax.swing.JButton lblAns2;
    private javax.swing.JButton lblAns3;
    private javax.swing.JButton lblAns4;
    private javax.swing.JLabel lblComplete2;
    private javax.swing.JLabel lblIndicator;
    private javax.swing.JLabel lblMainObject;
    private javax.swing.JLabel lblQuestion1;
    private javax.swing.JLabel lblScore;
    private javax.swing.JLabel lblScoreSide2;
    private javax.swing.JLabel lblUname;
    private javax.swing.JLabel lblUserName11;
    private javax.swing.JLabel lbltrue_false;
    private javax.swing.JPanel pnl_Header;
    // End of variables declaration//GEN-END:variables
}
