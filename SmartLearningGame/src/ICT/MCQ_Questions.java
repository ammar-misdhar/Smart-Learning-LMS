/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ICT;

import Main.Deshbord;
import Science.ElectronicConfiguration;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;

/**
 *
 * @author SHAHMY MHD
 */
public class MCQ_Questions extends javax.swing.JFrame {

    /**
     * Creates new form ICT_quiz_game
     */
    public MCQ_Questions() {
        initComponents();
        //
    }
    int health = 4;
    int qustion = 1;
    int score = 0;
    int complete = 0;
    String answer = "";

    String idPas = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public void setId(String id) {
        idPas = id;
        try {
            Connection con = database.db.getConnection();
            String sql = "SELECT userName FROM smart_learning.register WHERE id=?;";
            PreparedStatement st = con.prepareStatement(sql);
            st.setString(1, id);
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                String uName = rs.getString("userName");
                lblUname.setText("welcome " + uName);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Deshbord.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void insertToSql() {

        try {
            // create connection to database
            Connection con = database.db.getConnection();
            // Create prepared statement with the sql query
            PreparedStatement st1 = con.prepareStatement("UPDATE `smart_learning`.`ict` SET `MCQcomplete` = ?, `MCQscore` = ? WHERE (`stRegId` = '" + idPas + "');");
            // execute query
            st1.setString(1, complete + "");
            st1.setString(2, score + "");

            st1.executeUpdate();

            // show success message
        } catch (SQLException ex) {
            Logger.getLogger(ElectronicConfiguration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Reattem() {
        complete = 0;
        lblComplete.setText("Completed - " + complete + "%");

        score = 0;
        lblScore1.setText(score + "");
        lblScoreSide.setText("Score - " + score);
        health = 4;
        health1.setVisible(true);
        health2.setVisible(true);
        health3.setVisible(true);
        health4.setVisible(true);

        qustion = 0;
        qustion();

        answer = "";

    }

    public void correct() {
        //Correct Answer
        complete = complete + 10;
        lblComplete.setText("Completed - " + complete + "%");
        lblReattempt.setEnabled(false);
        btnNext.setEnabled(true);

        if (qustion == 1) {

            if (answer.equals("Online predators")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("Correct");
                lblIndicator.setForeground(Color.BLACK);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);

                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);

                }
            }

        }

        if (qustion == 2) {
            if (answer.equals("MS Paint")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("Correct");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);

                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }

        }

        if (qustion == 3) {
            if (answer.equals("All of the above")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("Correct");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 4) {
            if (answer.equals("Operating System")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 5) {
            if (answer.equals("Letters, numbers, and special characters")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 6) {
            if (answer.equals(". txt")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 7) {
            if (answer.equals("All of the above")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 8) {
            if (answer.equals("Keep the device unplugged when in use.")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }
        if (qustion == 9) {
            if (answer.equals("Basic Input/Output System")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }

            }
        }
        if (qustion == 10) {
            if (answer.equals("Turn on")) {
                score = score + 10;
                lblScore1.setText("" + score);
                lblScoreSide.setText("Score - " + score);
                lblIndicator.setText("corrrect");
                lblIndicator.setForeground(Color.black);
            } else {
                lblIndicator.setText("Wrong");
                lblIndicator.setForeground(Color.red);
                health--;
                if (health == 3) {
                    health4.setVisible(false);

                } else if (health == 2) {
                    health3.setVisible(false);
                } else if (health == 1) {
                    health2.setVisible(false);
                } else if (health == 0) {
                    health1.setVisible(false);
                    lblReattempt.setEnabled(true);
                    btnNext.setEnabled(false);
                }
            }
        }

        if (score == 100) {
            btnFinish.setEnabled(true);
            btnNext.setEnabled(false);

        }
        if (qustion == 10 && score <= 100) {
            lblReattempt.setEnabled(true);
            btnNext.setEnabled(false);

            lblAns1.setEnabled(false);
            lblAns2.setEnabled(false);
            lblAns3.setEnabled(false);
            lblAns4.setEnabled(false);
        }

        insertToSql();
    }

    public void qustion() {
        lblAns1.setEnabled(true);
        lblAns2.setEnabled(true);
        lblAns3.setEnabled(true);
        lblAns4.setEnabled(true);

        lblIndicator.setText("");
        btnNext.setEnabled(false);

        qustion++;
        if (qustion == 1) {
            //Qustion

            lblQustion1.setText("Which of the following trap small children into inappropriate relations?");
            //Answer
            lblAns1.setText("Worms");
            lblAns2.setText("Online predators");
            lblAns3.setText("Trojan Horse");
            lblAns4.setText("Anti-Virus");
        } else if (qustion == 2) {
            //Qustion
            lblQustion1.setText("Which of the following is not computer hardware?");
            //Answer
            lblAns1.setText("RAM");
            lblAns2.setText("Keyboard");
            lblAns3.setText("MS Paint");
            lblAns4.setText("Monitor");
        } else if (qustion == 3) {
            //Qustion
            lblQustion1.setText("Which of the following is/are examples of software?");
            //Answer
            lblAns1.setText("MS Word");
            lblAns2.setText("MS Excel");
            lblAns3.setText("OpenOffice Calc");
            lblAns4.setText("All of the above");
        } else if (qustion == 4) {
            //Qustion
            lblQustion1.setText("Software that starts working as soon as we switch on a computer is");
            //Answer
            lblAns1.setText("RAM");
            lblAns2.setText(" ROM");
            lblAns3.setText("None of the above");
            lblAns4.setText("Operating System");
        } else if (qustion == 5) {

            //Qustion
            lblQustion1.setText("What should a strong password consist of?");
            //Answer
            lblAns1.setText("Only letters");
            lblAns2.setText("Name of a person");
            lblAns3.setText("Letters, numbers, and special characters");
            lblAns4.setText("Numbers and special characters");
        } else if (qustion == 6) {
            //Qustion
            lblQustion1.setText("Which of the following is a valid file extension for Notepad file?");
            //Answer
            lblAns1.setText(".jpg");
            lblAns2.setText(".text (POST) starts");
            lblAns3.setText(". txt");
            lblAns4.setText(" .doc");
        } else if (qustion == 7) {
            //Qustion
            lblQustion1.setText("Which of the following is an Antivirus?");
            //Answer
            lblAns1.setText("Norton AntiVirus");
            lblAns2.setText("Quick Heal");
            lblAns3.setText("McAfee VirusScan");
            lblAns4.setText("All of the above");
        } else if (qustion == 8) {
            //Qustion
            lblQustion1.setText("Which option is not required to keep a device cool?");
            //Answer
            lblAns1.setText("Keep the device unplugged when in use.");
            lblAns2.setText("Do not cover a laptop with a blanket.");
            lblAns3.setText("Make sure the computer’s CPU fan is working.");
            lblAns4.setText(" Avoid leaving the device in the sun.");
        } else if (qustion == 9) {
            //Qustion
            lblQustion1.setText("BIOS stands for");
            //Answer
            lblAns1.setText("Base Input/Output System");
            lblAns2.setText("Basic Input/Output System");
            lblAns3.setText("Basic Input and Output Systematic");
            lblAns4.setText("None of the above");
        } else if (qustion == 10) {
            //Qustion
            lblQustion1.setText("Which of the following functions is not performed using a mouse?");
            //Answer
            lblAns1.setText("Turn on");
            lblAns2.setText("Hover");
            lblAns3.setText("Right-click");
            lblAns4.setText("Drag and Drop");
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblQustion1 = new javax.swing.JLabel();
        lblAns3 = new javax.swing.JButton();
        lblAns1 = new javax.swing.JButton();
        lblAns4 = new javax.swing.JButton();
        lblAns2 = new javax.swing.JButton();
        lblReattempt = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        lblIndicator = new javax.swing.JLabel();
        btnFinish = new javax.swing.JButton();
        pnl_Header = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        health1 = new javax.swing.JButton();
        health2 = new javax.swing.JButton();
        health3 = new javax.swing.JButton();
        health4 = new javax.swing.JButton();
        lblMainObject = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblScore1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        lblUname = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        lblUserName9 = new javax.swing.JLabel();
        jSeparator14 = new javax.swing.JSeparator();
        lblComplete = new javax.swing.JLabel();
        lblScoreSide = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(822, 538));

        lblQustion1.setFont(new java.awt.Font("Poppins Medium", 0, 20)); // NOI18N
        lblQustion1.setForeground(new java.awt.Color(102, 102, 102));
        lblQustion1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQustion1.setText("Which of the following trap small children into inappropriate relations?");

        lblAns3.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns3.setText("Trojan Horse");
        lblAns3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAns3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns3ActionPerformed(evt);
            }
        });

        lblAns1.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns1.setText("Worms");
        lblAns1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAns1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns1ActionPerformed(evt);
            }
        });

        lblAns4.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns4.setText("Anti-Virus");
        lblAns4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAns4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns4ActionPerformed(evt);
            }
        });

        lblAns2.setFont(new java.awt.Font("Poppins Medium", 0, 18)); // NOI18N
        lblAns2.setText("Online predators");
        lblAns2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAns2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblAns2ActionPerformed(evt);
            }
        });

        lblReattempt.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        lblReattempt.setText("Reattempt");
        lblReattempt.setEnabled(false);
        lblReattempt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblReattemptActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btnNext.setText("Next");
        btnNext.setEnabled(false);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        lblIndicator.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        lblIndicator.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnFinish.setFont(new java.awt.Font("Poppins SemiBold", 0, 14)); // NOI18N
        btnFinish.setText("Finish");
        btnFinish.setEnabled(false);
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblReattempt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblAns4, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAns3, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAns2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQustion1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
                    .addComponent(lblIndicator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblQustion1)
                .addGap(52, 52, 52)
                .addComponent(lblAns1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblAns4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReattempt)
                    .addComponent(btnNext)
                    .addComponent(btnFinish)
                    .addComponent(jButton7))
                .addGap(27, 27, 27))
        );

        pnl_Header.setBackground(new java.awt.Color(255, 255, 255));
        pnl_Header.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Health");
        pnl_Header.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 194, 20));

        health1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health1.setBorder(null);
        health1.setContentAreaFilled(false);
        pnl_Header.add(health1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        health2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health2.setBorder(null);
        health2.setContentAreaFilled(false);
        pnl_Header.add(health2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 50, -1));

        health3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health3.setBorder(null);
        health3.setContentAreaFilled(false);
        pnl_Header.add(health3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, -1));

        health4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/hart.png"))); // NOI18N
        health4.setBorder(null);
        health4.setContentAreaFilled(false);
        pnl_Header.add(health4, new org.netbeans.lib.awtextra.AbsoluteConstraints(141, 40, 50, -1));

        lblMainObject.setFont(new java.awt.Font("Segoe UI", 2, 28)); // NOI18N
        lblMainObject.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMainObject.setText("MCQ Qustion");
        pnl_Header.add(lblMainObject, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, 371, -1));

        jLabel11.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Set the answer to given text box");
        pnl_Header.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 371, -1));

        jLabel13.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Score");
        pnl_Header.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        lblScore1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblScore1.setForeground(new java.awt.Color(102, 102, 102));
        lblScore1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore1.setText("000");
        pnl_Header.add(lblScore1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, 39, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/ICT title.png"))); // NOI18N
        pnl_Header.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1386, 94));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jButton6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(102, 102, 102));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/profile.png"))); // NOI18N
        jButton6.setContentAreaFilled(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        lblUname.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        lblUname.setForeground(new java.awt.Color(102, 102, 102));
        lblUname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUname.setText("Wlcome Admin");

        jPanel14.setBackground(new java.awt.Color(247, 247, 247));
        jPanel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 102, 255)));
        jPanel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel14.setEnabled(false);

        lblUserName9.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        lblUserName9.setForeground(new java.awt.Color(51, 51, 51));
        lblUserName9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserName9.setText("MCQ Qustion");

        lblComplete.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        lblComplete.setForeground(new java.awt.Color(51, 51, 51));
        lblComplete.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblComplete.setText("Completed - 0%");

        lblScoreSide.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        lblScoreSide.setForeground(new java.awt.Color(51, 51, 51));
        lblScoreSide.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScoreSide.setText("Score - 0");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUserName9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblScoreSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblComplete, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(jSeparator14))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblUserName9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblComplete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblScoreSide)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jButton2.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        jButton2.setText("MCQ Qustion");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255), 2));
        jButton2.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUname)
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(338, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnl_Header, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(5, 5, 5)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnl_Header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        qustion();

    }//GEN-LAST:event_btnNextActionPerformed


    private void lblReattemptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblReattemptActionPerformed

        Reattem();

        lblReattempt.setEnabled(false);

    }//GEN-LAST:event_lblReattemptActionPerformed

    private void lblAns1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns1ActionPerformed
        String ans1 = lblAns1.getText();
        answer = ans1;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns1ActionPerformed

    private void lblAns2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns2ActionPerformed
        String ans2 = lblAns2.getText();
        answer = ans2;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns2ActionPerformed

    private void lblAns3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns3ActionPerformed
        String ans3 = lblAns3.getText();
        answer = ans3;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns3ActionPerformed

    private void lblAns4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblAns4ActionPerformed
        String ans4 = lblAns4.getText();
        answer = ans4;
        correct();

        lblAns1.setEnabled(false);
        lblAns2.setEnabled(false);
        lblAns3.setEnabled(false);
        lblAns4.setEnabled(false);
    }//GEN-LAST:event_lblAns4ActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed

    }//GEN-LAST:event_btnFinishActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Main.ictHub ih = new Main.ictHub();
        ih.setId(idPas);
        ih.show();
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MCQ_Questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MCQ_Questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MCQ_Questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MCQ_Questions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MCQ_Questions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton health1;
    private javax.swing.JButton health2;
    private javax.swing.JButton health3;
    private javax.swing.JButton health4;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JButton lblAns1;
    private javax.swing.JButton lblAns2;
    private javax.swing.JButton lblAns3;
    private javax.swing.JButton lblAns4;
    private javax.swing.JLabel lblComplete;
    private javax.swing.JLabel lblIndicator;
    private javax.swing.JLabel lblMainObject;
    private javax.swing.JLabel lblQustion1;
    private javax.swing.JButton lblReattempt;
    private javax.swing.JLabel lblScore1;
    private javax.swing.JLabel lblScoreSide;
    private javax.swing.JLabel lblUname;
    private javax.swing.JLabel lblUserName9;
    private javax.swing.JPanel pnl_Header;
    // End of variables declaration//GEN-END:variables
}
